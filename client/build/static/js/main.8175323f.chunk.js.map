{"version":3,"sources":["logo.svg","assests/m.PNG","utils/queries.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/nav.js","assests/paintings/blues/guruwa.jpg","assests/paintings/reds/ebbs.JPG","assests/paintings/reds/winthali.PNG","assests/paintings/reds/burning.jpg","assests/paintings/reds/set.jpg","assests/paintings/reds/boundaries.jpg","assests/me.jpg","assests/dad.jpg","assests/giki.jpg","assests/paintings/reds/burst.jpg","assests/paintings/reds/love.jpg","assests/paintings/reds/sisters.jpg","assests/paintings/reds/taking.jpg","assests/paintings/blues/intergation.jpg","assests/paintings/blues/rain.jpg","assests/paintings/blues/ray.jpg","assests/paintings/reds/anger.jpg","components/ProductItem/index.js","components/ProductList/index.js","pages/main.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","pages/timelapses.js","assests/spinner.gif","pages/Detail.js","pages/checkout.js","pages/footer.js","pages/contact.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_PRODUCTS","gql","QUERY_CHECKOUT","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","CartItem","item","className","src","image","alt","price","placeholder","onChange","target","parseInt","role","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","location","assign","reload","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","getCart","id","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Navbar","useState","Logo","style","width","height","Form","onSubmit","preventDefault","emailjs","sendForm","text","Swal","fire","icon","title","error","reset","Field","control","Input","label","required","iconPosition","TextArea","Button","color","ProductItem","quantity","to","itemInCart","find","cartItem","purchaseQuanity","ProductList","Main","me","Love","set","sisters","taking","burst","guruwa","intergration","ray","rain","tyle","s","anger","burning","winthali","Component","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","isEmpty","require","isAuthenticated","user","loading","combineReducers","auth","payload","errors","middleware","thunk","Time","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","autoplay","loop","controls","Detail","useParams","currentProduct","setCurrentProduct","useQuery","indexedProducts","description","disabled","p","spinner","ProductDisplay","Message","message","Checkout","setMessage","query","URLSearchParams","search","get","Footer","ContactForm","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Contact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8175323f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/m.5dd507ff.PNG\";","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;","export function pluralize(name, count) {\n    if (count === 1) {\n      return name;\n    }\n    return name + 's';\n  }\n  \n  export function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n      const request = window.indexedDB.open('shop-shop', 1);\n      let db, tx, store;\n      request.onupgradeneeded = function(e) {\n        const db = request.result;\n        db.createObjectStore('products', { keyPath: '_id' });\n        db.createObjectStore('categories', { keyPath: '_id' });\n        db.createObjectStore('cart', { keyPath: '_id' });\n      };\n  \n      request.onerror = function(e) {\n        console.log('There was an error');\n      };\n  \n      request.onsuccess = function(e) {\n        db = request.result;\n        tx = db.transaction(storeName, 'readwrite');\n        store = tx.objectStore(storeName);\n  \n        db.onerror = function(e) {\n          console.log('error', e);\n        };\n  \n        switch (method) {\n          case 'put':\n            store.put(object);\n            resolve(object);\n            break;\n          case 'get':\n            const all = store.getAll();\n            all.onsuccess = function() {\n              resolve(all.result);\n            };\n            break;\n          case 'delete':\n            store.delete(object._id);\n            break;\n          default:\n            console.log('No valid method');\n            break;\n        }\n  \n        tx.oncomplete = function() {\n          db.close();\n        };\n      };\n    });\n  }","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import { useReducer } from 'react';\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((product) => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((product) => {\n        return product._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        const token = this.getToken();\n\n        return token && this.isTokenExpired(token) ? true : false;\n    }\n\n    isTokenExpired(token) {\n        const decoded = decode(token);\n\n        if (decoded.exp < Date.now() / 1000) {\n            localStorage.removeItem('id_token');\n            return true;\n        }\n        return false;\n    }\n\n    getToken() {\n        // Retrives the user token from local storage.\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        // saves user token to local storage\n        localStorage.setItem('id_token', idToken);\n        window.location.assign('/');\n    }\n\n    logout() {\n        localStorage.removeItem('id_token');\n        // this will reload the page and reset the stae of the application\n        window.location.reload();\n    }\n}\n\nexport default new AuthService();","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [x]\n      </div>\n      <h2 id=\"title\">Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n      <div className=\"noCart\">\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n           Nothing in your cart\n        </h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React, { useState } from 'react';\n// import { useHistory, Link } from 'react-router-dom';\nimport Logo from '../assests/m.PNG';\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\nimport emailjs from 'emailjs-com';\nimport Swal from 'sweetalert2';\nimport Cart from '../components/Cart/index.js';\n\nconst SERVICE_ID = \"service_nkazh0j\";\nconst TEMPLATE_ID = \"template_8cxz3se\";\nconst USER_ID = \"user_zAutm7UYCBSXMkVu3IaOs\";\n// import ContactForm from \"../components/Contact/contact\";\n\nconst Navbar = () =>{\n    const [status, setStatus] = useState(\"Submit\");\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      setStatus(\"Sending...\");\n      const { name, email, message } = e.target.elements;\n      let details = {\n        name: name.value,\n        email: email.value,\n        message: message.value,\n      };\n      let response = await fetch(\"http://localhost:3000/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(details),\n      });\n      setStatus(\"Submit\");\n      let result = await response.json();\n      alert(result.status);\n    };\n    const handleOnSubmit = (e) => {\n      e.preventDefault();\n      emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\n        .then((result) => {\n          console.log(result.text);\n          Swal.fire({\n            icon: 'success',\n            title: 'Message Sent Successfully'\n          })\n        }, (error) => {\n          console.log(error.text);\n          Swal.fire({\n            icon: 'error',\n            title: 'Ooops, something went wrong',\n            text: error.text,\n          })\n        });\n      e.target.reset()\n    };\n    \n        return (\n\n            <div className=\"navbar sticky-top  container-fluid\" id=\"myNav\">\n                \n                    <div className=\"navbar-brand d-flex\">\n                        <div className=\"row\">\n                            <div className=\"col-xs-6 md-4\"> \n                                <img src={Logo} style={{width: \"70px\", height: \"70px\"}} alt=\"React App Logo\" className=\"d-inline-block logo\"/>\n                            </div>\n                            <div className=\"col-xs-6 md-4\">\n                                <h1 className=\"d-inline-block logo\" id=\"title\">Munmia</h1>\n                            </div>\n                        </div>\n                    </div>\n                            \n                    <div className=\"inline-block d-flex right\">\n                        <div className=\"d-flex  d-inline-block \">\n                            <button className=\"btn btn-clear\"> <h2><i className=\"bi bi-person\"></i></h2> </button>\n                            <button className=\"btn btn-clear navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseEx\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                               <h2><Cart/></h2> </button>\n                            <div className=\"col\">\n                              <div className=\"collapse\" id=\"collapseEx\">\n                                <div className=\"card-body\">\n                                  {/* <Cart /> */}\n                                </div>\n                              </div>\n                            </div>\n                        </div>\n                            <div className=\"row d-flex\">\n                                <button  className=\"btn btn-clear navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\"><h2><i className=\"bi bi-envelope\"></i></h2> </button>\n                                <div className=\"col\">\n                                    <div className=\" collapse\" id=\"collapseExample\">\n                                        <div className=\"  card-body\">\n                                            <Form onSubmit={handleOnSubmit} className=\"form-inline\">\n                                                <Form.Field\n                                                    id='form-input-control-email'\n                                                    control={Input}\n                                                    label='Email'\n                                                    name='reply_to'\n                                                    placeholder='Email…'\n                                                    required\n                                                    icon='mail'\n                                                    iconPosition='left'\n                                                />\n                                                <Form.Field\n                                                    id='form-input-control-last-name'\n                                                    control={Input}\n                                                    label='Name'\n                                                    name='from_name'\n                                                    placeholder='Name…'\n                                                    required\n                                                    icon='user circle'\n                                                    iconPosition='left'\n                                                />\n                                                <Form.Field\n                                                    id='form-textarea-control-opinion'\n                                                    control={TextArea}\n                                                    label='Message'\n                                                    name='message'\n                                                    placeholder='Message…'\n                                                    required\n                                                />\n                                                <Button type='submit' color='green'>Submit</Button>\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </div>   \n                            </div>\n                        \n                    </div>\n                \n            </div>\n        );\n    \n};\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/guruwa.99ede5c1.jpg\";","export default __webpack_public_path__ + \"static/media/ebbs.adba04fd.JPG\";","export default __webpack_public_path__ + \"static/media/winthali.d58bb176.PNG\";","export default __webpack_public_path__ + \"static/media/burning.548ad29b.jpg\";","export default __webpack_public_path__ + \"static/media/set.5f784d60.jpg\";","export default __webpack_public_path__ + \"static/media/boundaries.f8feb1b8.jpg\";","export default __webpack_public_path__ + \"static/media/me.b21e2406.jpg\";","export default __webpack_public_path__ + \"static/media/dad.878305da.jpg\";","export default __webpack_public_path__ + \"static/media/giki.f7c58653.jpg\";","export default __webpack_public_path__ + \"static/media/burst.4ee08e20.jpg\";","export default __webpack_public_path__ + \"static/media/love.5d6b4c75.jpg\";","export default __webpack_public_path__ + \"static/media/sisters.58933ff8.jpg\";","export default __webpack_public_path__ + \"static/media/taking.1af046b6.jpg\";","export default __webpack_public_path__ + \"static/media/intergation.9dd60e22.jpg\";","export default __webpack_public_path__ + \"static/media/rain.cf80e62a.jpg\";","export default __webpack_public_path__ + \"static/media/ray.235aee1d.jpg\";","export default __webpack_public_path__ + \"static/media/anger.efa1989e.jpg\";","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise} from \"../../utils/helpers\";\n// import Love from '../assests/paintings/reds/love.jpg';\n\nfunction ProductItem(item) {\n    const [state, dispatch] = useStoreContext();\n\n    const {\n        image,\n        name,\n        _id,\n        price,\n        quantity,\n    } = item;\n\n    const { cart } = state\n    \n    const addToCart = () => {\n        const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n        if (itemInCart) {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: _id,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuanity) + 1\n            });\n            idbPromise('cart', 'put', {\n                ...itemInCart,\n                purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n            });\n        } else {\n            dispatch({\n                type: ADD_TO_CART,\n                product: {...item, purchaseQuantity: 1}\n            });\n            idbPromise('cart', 'put', {...item, purchaseQuantity: 1 });\n        }\n    }\n\n    return (\n        <div className=\"card px-1 py-1\">\n            <Link to={`/products/${_id}`}>\n                <img\n                alt={name} src={`/images/${image}`}\n                />\n                <p>{name}</p>\n            </Link>\n            <div>\n                <div>{quantity} {pluralize(\"item\", quantity)} in stock</div> \n                <span>$750{price}</span>\n            </div>\n            <button className=\"addBtn\" onClick={addToCart}>Add to cart</button>\n        </div>\n    );\n}\n\nexport default ProductItem;","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n// import spinner from '../../assets/spinner.gif';\n// import spinner from '../assets/spinner.gif';\n// import spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {/* {loading ? <img src={spinner} alt=\"loading\" /> : null} */}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { Component } from \"react\";\nimport ebbs from '../assests/paintings/reds/ebbs.JPG';\nimport guruwa from '../assests/paintings/blues/guruwa.jpg';\nimport winthali from '../assests/paintings/reds/winthali.PNG';\nimport burning from '../assests/paintings/reds/burning.jpg';\nimport boundaries from '../assests/paintings/reds/boundaries.jpg';\nimport set from '../assests/paintings/reds/set.jpg';\nimport dad from '../assests/dad.jpg';\nimport giki from '../assests/giki.jpg';\nimport me from '../assests/me.jpg';\nimport burst from '../assests/paintings/reds/burst.jpg';\nimport Love from '../assests/paintings/reds/love.jpg';\nimport sisters from '../assests/paintings/reds/sisters.jpg';\nimport taking from '../assests/paintings/reds/taking.jpg';\nimport intergration from '../assests/paintings/blues/intergation.jpg';\n// import ContactForm from \"../components/Contact/contact\";\nimport rain from '../assests/paintings/blues/rain.jpg';\nimport ray from '../assests/paintings/blues/ray.jpg';\n\nimport anger from '../assests/paintings/reds/anger.jpg';\nimport ProductList from \"../components/ProductList/index.js\";\n// import CategoryMenu from \"../components/CategoryMenu/index.js\";\nimport Cart from \"../components/Cart/index.js\";\nimport ProductItem from '../components/ProductItem/index.js';\n\nclass Main extends Component {\n    render() {\n        return (\n            <>\n            {/* <div className=\"container-fluid\"> */}\n                <div className=\"intro mb-3\">\n                    <p><b>\n                    Munmia is a Bunuba artist. </b>\n                    </p><p><b>\n                    She grew up on Country, \n                    in Fitzroy Crossing, the Kimberly, \n                    Western Australia. \n                    The most beautiful country in the world.\n                    </b>\n                    </p>\n                </div>\n            {/* </div> */}\n                <div className=\"image-container \" >\n                    <img src={me} className=\" img-fluid\" alt=\"Card image cap\" style={{height:\"30%\"}}/>\n                \n                    <div className=\"overlay  \">\n                        \n                        <h2 className=\"mb-3 about\" id=\"title\">About</h2>\n                            <div className=\"about mb-3\">\n                                <p> \n                                    <b>Munmia is her Aboriginal name given to her by her grandparents.\n                                    They pick names from five generations ago, so they knew those people,\n                                    yet their passing was long enough ago for the names to be said again.\n                                </b>\n                                </p>\n                                <p>\n                                    Munmia has only been painting from the beginning of 2021. The same time she started therapy.\n                                    There is no coincidence there as to create meaingful art the artist has to be in touch with there emotions and self.\n                                    Something that sadly had not always been the case. \n                                    </p>\n                                    <p>\n                                    Coming to this realisation has made Munmia a huge mental health advocate for the wider community and especially for Indigenous peoples. \n                                    Needless to say, her art is her therapy.\n                                </p>\n\n                            </div>\n                    </div>\n                </div>    \n                <div className=\"cards  container\">\n                    <div className=\"row\">\n                        {/* <CategoryMenu /> */}\n                        {/* <ProductList /> */}\n                        {/* <Cart /> */}\n\n                        <h1 id=\"title\"> Featured Originals </h1>\n                        <br />\n                        <hr></hr>\n                        <div className=\"row\">\n                        <div className=\"card col-md \" style={{ width: \"30rem\" }}>\n                            <h3> 600x900mm </h3>\n                            <div id=\"carouselExampleControls\" className=\"carousel carousel-dark slide mb-5 card\" data-bs-ride=\"carousel\">\n                                <div className=\"carousel-indicators\">\n                                    <button type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n                                    <button type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n                                    <button type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\n                                </div>\n                                <div className=\"carousel-inner\">\n                                    <div className=\"carousel-item active\" data-bs-interval=\"10000\">\n                                        <div className=\"card\">\n                                            <ProductItem />\n                                            <img src={Love} className=\"  card-img-top image\" alt=\"Card image cap\" />\n                                            <div className=\"  d-md-block card-body mb-3\">\n                                                <h3>love</h3>\n                                                <p>Acrylic on canvas, $800 </p>\n                                            </div>\n                                            <br/>\n                                        </div>\n                                    </div>\n                                    <div className=\"carousel-item \" data-bs-interval=\"2000\">\n                                        <div className=\"card\">\n                                        <ProductItem />\n                                            <img src={set} className=\" card-img-top\" alt=\"Card image cap\" />\n                                            <div className=\"card-body mb-3 d-md-block\">\n                                                <h3>Hard Set</h3>\n                                                <p>Acrylic on canvas, $800 </p>\n                                            </div>\n                                            <br/>\n                                        </div>\n                                    </div>\n                                    <div className=\"carousel-item \" data-bs-interval=\"10000\">\n                                        <div className=\"card\">\n                                            <img src={sisters} className=\"  card-img-top image\" alt=\"Card image cap\" />\n                                            <div className=\"  d-md-block card-body mb-3\">\n                                                <h3>Five sisters</h3>\n                                                <p>Acrylic on canvas,  </p>\n                                            </div>\n                                            <br/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide=\"prev\">\n                                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                    <span className=\"visually-hidden\">Previous</span>\n                                </button>\n                                <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleDark\" data-bs-slide=\"next\">\n                                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                    <span className=\"visually-hidden\">Next</span>\n                                </button>\n                            </div>\n                        </div>\n\n                            <div className=\"card col-md\" style={{ width: \"30rem\" }}>\n                                <h3>600x900mm</h3>\n                                    <div id=\"carouseDark\" className=\"carousel carousel-dark slide mb-5 \" data-bs-ride=\"carousel\">\n                                        <div className=\"carousel-indicators\">\n                                            <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n                                            <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n                                        </div>\n                                        <div className=\"carousel-inner\">\n                                            <div className=\"carousel-item active\" data-bs-interval=\"10000\">\n                                                <div className=\"card\" >\n                                                <ProductItem />\n                                                    <img src={taking} className=\"card-img-top image\" alt=\"Card image cap\" />\n                                                    <div className=\"card-body mb-3 d-md-block\">\n                                                        <h3>Taking</h3>\n                                                        <p>Acrylic on canvas, $800 </p>\n                                                    </div>\n                                                    <br/>\n                                                </div>    \n                                            </div>\n                                            <div className=\"carousel-item \" data-bs-interval=\"10000\">\n                                                <div className=\"card \" >\n                                                    <img src={burst} className=\"card-img-top image\" alt=\"Card image cap\"  />\n                                                    <div className=\"card-body mb-3d-none d-md-block\">\n                                                        <h3>Burst</h3>\n                                                        <p>Acrylic on canvas, $800</p>\n                                                    </div>\n                                                    <ProductItem />\n                                                    <br/>\n                                                </div>    \n                                            </div>\n                                        </div>\n                                        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"prev\">\n                                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                            <span className=\"visually-hidden\">Previous</span>\n                                        </button>\n                                        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"next\">\n                                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                            <span className=\"visually-hidden\">Next</span>\n                                        </button>\n                                    </div>\n                                <br/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"group col-md\" style={{ width: \"30rem\" }}>\n                        <h3>600x900mm</h3>\n                        <div id=\"carouseDark\" className=\"carousel carousel-dark slide mb-5\" data-bs-ride=\"carousel\">\n                            <div className=\"carousel-indicators\">\n                                <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n                                <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n                            </div>\n                            <div className=\"carousel-inner\">\n                                <div className=\"carousel-item active\" data-bs-interval=\"10000\">\n                                    <div className=\"card\">\n                                        <img src={guruwa} className=\" card-img-top image\" alt=\"Card image cap\" />\n                                        <div className=\"card-body mb-3 d-md-block\">\n                                            <h3>Guruwa</h3>\n                                            <p>Acrylic on canvas, $800 </p>\n                                        </div>\n                                        <ProductItem />\n                                        <br/>\n                                    </div>    \n                                </div>\n                                <div className=\"carousel-item \" data-bs-interval=\"10000\">\n                                    <div className=\"card\">\n                                        <img src={intergration} className=\" card-img-top image\" alt=\"Card image cap\"  />\n                                        <div className=\"card-body mb-3d-none d-md-block\">\n                                            <h3>Boundaries</h3>\n                                            <p>Acrylic on canvas, $800</p>\n                                        </div>\n                                        <ProductItem />\n                                        <br/>\n                                    </div>    \n                                </div>\n                            </div>\n                            <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"prev\">\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                <span className=\"visually-hidden\">Previous</span>\n                            </button>\n                            <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"next\">\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                <span className=\"visually-hidden\">Next</span>\n                            </button>\n                        </div>\n                        <br/>\n                        </div>\n                        \n                        <div className=\"card col-md\" style={{ width: \"30rem\" }}>\n                        <h3>450mmx600mm</h3>\n                        \n                        <div id=\"carouseDark\" className=\"carousel carousel-dark slide mb-5\" data-bs-ride=\"carousel\">\n                            <div className=\"carousel-indicators\">\n                                <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n                                <button type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n                            </div>\n                            <div className=\"carousel-inner\">\n                                <div className=\"carousel-item active\" data-bs-interval=\"10000\">\n                                    <div className=\"card \" >\n                                        <img src={ray} className=\"card-img-top image \" alt=\"Card image cap\" />\n                                        <div className=\"card-body mb-3 d-md-block\">\n                                            <h3>Ray</h3>\n                                            <p>Acrylic on canvas, $350 </p>\n                                        </div>\n                                        <br/>\n                                    </div>    \n                                </div>\n                                <div className=\"carousel-item \" data-bs-interval=\"10000\">\n                                    <div className=\"card \" >\n                                        <img src={rain} className=\"card-img-top image \" alt=\"Card image cap\"  />\n                                        <div className=\"card-body mb-3d-none d-md-block \">\n                                            <h3>Rain</h3>\n                                            <p>Oil on canvas, $400</p>\n                                        </div>\n                                        <br/>\n                                    </div>    \n                                </div>\n                            </div>\n                            <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"prev\">\n                                <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                <span className=\"visually-hidden\">Previous</span>\n                            </button>\n                            <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselDark\" data-bs-slide=\"next\">\n                                <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                <span className=\"visually-hidden\">Next</span>\n                            </button>\n                        </div>\n                        <br/>\n                        </div>\n                        </div>\n                        <div className=\"row\">\n                                <div className=\"card col-md\" tyle={{ width: \"30rem\" }}>\n                                    <div className=\"card mb-3 col-md\" s>\n                                        <img className=\"card-img-top image\" src={anger} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Winthali</h5>\n                                            <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                                            <p className=\"card-text\">Oil on canvas</p>\n                                            \n                                        </div>\n                                    </div>\n                                        <br/>\n                                </div>  \n                            <div className=\"card col-md\" style={{ width: \"30rem\" }}>\n                                    <div className=\"card col-md\" >\n                                        <img className=\"card-img-top image\" src={burning} alt=\"Card image cap\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">Burning and burnt</h5>\n                                            <p className=\"card-text\">Fire isn't just destruction, but also the begining of new life. If regular burings aren't done then the landscape can become dangerous. The mind is no different.</p>\n                                            <p className=\"card-text\">Acrylic on canvas</p>\n                                            <br/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                            <div className=\"card col-md\" style={{ width: \"30rem\" }}>\n                                <div className=\"card col-md\" >\n                                    <img className=\"card-img-top image\" src={winthali} alt=\"Card image cap\" />\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">Winthali</h5>\n                                        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                                        <p className=\"card-text\">Oil on canvas</p>\n                                        <br/>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n\n                        </div>\n                </div>\n            </>\n            \n        )\n    };\n};\n\nexport default Main;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const USERS_LOGOUT = \"USERS_LOGOUT\";\nexport const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FALIURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE'\n};","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n// import { userConstants } from \"../actions/types\";\n// import { isEmpty } from \"is-empty\";\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\n// let user = JSON.parse(localStorage.getItem('user'));\n// const initialState = user ? { loggedIn: true, user } : {};\n\n// export default function authentication(state = initialState, action) {\n//     switch (action.type) {\n//         case userConstants.LOGIN_REQUEST:\n//             return {\n//                 loggedIn: true,\n//                 user: action.user\n//             };\n//             case userConstants.LOGIN_SUCCESS:\n//                 return {\n//                     loggedIn: true,\n//                     user: action.user\n//                 };\n//                 case userConstants.LOGIN_FAILURE:\n//                     return {};\n//                     case userConstants.LOGOUT:\n//                         return {};\n//                         default:\n//                             return state\n//     }\n// }\n\nexport default function authentication(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n            case USER_LOADING: \n            return {\n                ...state,\n                loading: true\n            };\n            default:\n                return state;\n    }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function foo(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n            default:\n                return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducers from \"./authReducers\";\nimport errorReducers from \"./errorReducers\";\n\nexport default combineReducers({\n    auth: authReducers,\n    errors: errorReducers\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n\nexport default store;","import React, { Component, useState } from \"react\";\n// import Love from \".../public/Video/love.MOV.mp4\";\n\nclass Time extends Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"jumbtron-fluid center\">\n                    <h2>Timelapses</h2>\n\n                </div>\n                <div className=\"row cards\">\n                    <div className=\"card\" width=\"50%\">\n                    <video autoplay loop height=\"600px\" controls=\"\">\n                    <source src='/Video/love.MOV.mp4\"' type=\"video/mp4\"/> \n                    </video>\n                    </div>\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Time;","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n// import spinner from '../assets/spinner.gif';\nimport spinner from '../assests/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button className=\"addBtn\" onClick={addToCart}>Add to Cart</button>\n            <button className=\"addBtn\"\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst ProductDisplay = () => (\n  <section className=\"row\">\n    <div className=\"card \" >\n      <div className=\"product \">\n        <img className=\"\"\n          src=\"https://i.imgur.com/EHyR2nP.png\"\n          alt=\"The cover of Stubborn Attachments\"\n        />\n        <div className=\"description\">\n        <h3>Painting</h3>\n        <h5>A$750.00</h5>\n        </div>\n      </div>\n      <form action=\"/create-checkout-session\" method=\"POST\">\n        <button className=\"addBtn\" type=\"submit\">\n          Checkout\n        </button>\n      </form>\n    </div>\n  </section>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function Checkout() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay />\n  );\n}\n\n// export default Checkout;","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\" footer \" id=\"title\">\n                \n                <p>Webiste made by Munmia, she's a skutta girl</p>\n\n                \n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react';\nimport emailjs from 'emailjs-com';\nimport Swal from 'sweetalert2';\n\nconst SERVICE_ID = \"service_nkazh0j\";\nconst TEMPLATE_ID = \"template_8cxz3se\";\nconst USER_ID = \"user_zAutm7UYCBSXMkVu3IaOs\";\n\nconst ContactForm = () => {\n  const [status, setStatus] = useState(\"Submit\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID)\n      .then((result) => {\n        console.log(result.text);\n        Swal.fire({\n          icon: 'success',\n          title: 'Message Sent Successfully'\n        })\n      }, (error) => {\n        console.log(error.text);\n        Swal.fire({\n          icon: 'error',\n          title: 'Ooops, something went wrong',\n          text: error.text,\n        })\n      });\n    e.target.reset()\n  };\n\n\n  return (\n    <>\n    <div className=\"container-fluid\">\n        \n\n            <div className=\"cards row\">\n                <h3>Contact me here</h3>\n                <br />\n                <Link to=\"/Main\" style={{}}><button  className=\"btn btn-clear mb-3\"><h2>Return to Homepage</h2> </button></Link>\n                    <div className=\"card \">\n                        <Form onSubmit={handleOnSubmit}>\n                            <Form.Field\n                                id='form-input-control-email'\n                                control={Input}\n                                label='Email'\n                                name='reply_to'\n                                placeholder='Email…'\n                                required\n                                icon='mail'\n                                iconPosition='left'\n                            />\n                            <Form.Field\n                                id='form-input-control-last-name'\n                                control={Input}\n                                label='Name'\n                                name='from_name'\n                                placeholder='Name…'\n                                required\n                                icon='user circle'\n                                iconPosition='left'\n                            />\n                            <Form.Field\n                                id='form-textarea-control-opinion'\n                                control={TextArea}\n                                label='Message'\n                                name='message'\n                                placeholder='Message…'\n                                required\n                            />\n                            <Button type='submit' color='green'>Submit</Button>\n                        </Form>\n                    </div>\n            </div>\n        </div>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import logo from './logo.svg';\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\nimport Navbar from './pages/nav.js';\nimport Main from './pages/main.js';\nimport store from './store';\nimport { StoreProvider } from './utils/GlobalState';\nimport Time from './pages/timelapses';\nimport Detail from './pages/Detail.js';\nimport Cart from './components/Cart/index.js';\nimport Product from './components/ProductItem/index.js';\nimport Checkout from './pages/checkout.js';\n\nimport Footer from './pages/footer.js';\nimport Contact from './pages/contact.js';\n// import Checkout from './components/Checkout/index.js';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nclass App extends Component {\n  render() {\n      return(\n        <ApolloProvider client={client}>\n          <Router>\n            <div className=\"App\">\n              <StoreProvider>\n                <Navbar/>\n                  <Switch>\n                    <Route exact path=\"/\" component={Main} />\n                    <Route exact path=\"/time\" component={Time} />\n                    <Route exact path=\"./contact.js\" component={Contact}/>\n                    <Route exact path=\"/detail\" component={Detail}/>\n                  </Switch>\n                  <Detail />\n                  <Checkout />\n                  <Footer />\n              </StoreProvider>\n            </div>\n          </Router>\n        </ApolloProvider>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}